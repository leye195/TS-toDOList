{"version":3,"sources":["mixin.ts","components/Header/HeaderPresenter.tsx","components/Header/HeaderContainer.tsx","components/Footer/FooterPresenter.tsx","components/Footer/FooterContainer.tsx","components/App/AppPresenter.tsx","components/App/AppContainer.tsx","index.tsx","theme.ts"],"names":["flex","dir","align","justify","css","Container","styled","header","props","isNight","theme","dark","Title","h5","ButtonContainer","div","Button","button","greyColor","HeaderPresenter","title","handleToggle","onClick","HeaderContainer","footer","P","p","LinkContainer","Link","a","FooterPresenter","href","icon","faGithub","faInstagram","FooterContainer","GlobalStyle","createGlobalStyle","reset","main","Form","form","InputContainer","Input","input","TodoContainer","section","ToDo","article","done","CheckBox","darkgreyColor","greenColor","DeleteContainer","redColor","ControlContainer","CategoryContainer","Category","selected","AppPresenter","isOpen","todos","todo","handleCheck","handleDelete","handleOnChange","handleOpen","handleSubmitToDo","handleSelect","onSubmit","faChevronCircleUp","faChevronCircleDown","value","onChange","placeholder","filter","map","key","_id","data-id","faCheck","className","faTimes","AppContainer","useState","setToDos","setToDo","setOpen","setNight","setSelect","useEffect","todoList","localStorage","getItem","flag","JSON","parse","saveToDos","useCallback","setItem","stringify","saveTheme","e","target","preventDefault","newToDoList","v4","currentTarget","dataset","updatedTodos","filteredToDos","idx","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iYACO,IAAMA,EAAO,SAACC,EAAaC,EAAeC,GAC/C,OAAOC,cAAP,IAEoBH,EACHC,EACIC,I,kwBCHvB,IAAME,EAAYC,UAAOC,OAAV,IAEXP,EAAK,MAAO,SAAU,kBAIV,SAACQ,GAAD,OACZA,EAAMC,QAAUD,EAAME,MAAMC,KAAO,wBAEjCC,EAAQN,UAAOO,GAAV,KAGA,SAACL,GAAD,OAAYA,EAAMC,QAAU,QAAU,WAE3CK,EAAkBR,UAAOS,IAAV,KAMfC,EAASV,UAAOW,OAAV,KAKU,SAACT,GAAD,OAAWA,EAAME,MAAMQ,aACvB,SAACV,GAAD,OAClBA,EAAMC,QACF,sDACA,wDAEJT,EAAK,MAAO,SAAU,WACf,SAACQ,GAAD,OAAYA,EAAMC,QAAU,QAAU,aAoBlCU,MAZf,YAAoE,IAAzCC,EAAwC,EAAxCA,MAAOX,EAAiC,EAAjCA,QAASY,EAAwB,EAAxBA,aACzC,OACE,kBAAChB,EAAD,CAAWI,QAASA,GAClB,kBAACG,EAAD,CAAOH,QAASA,GAAUW,GAC1B,kBAACN,EAAD,KACE,kBAACE,EAAD,CAAQP,QAASA,EAASa,QAASD,GAChCZ,EAAU,WAAa,gBChCnBc,MAVf,YAAoE,IAAzCH,EAAwC,EAAxCA,MAAOX,EAAiC,EAAjCA,QAASY,EAAwB,EAAxBA,aAEzC,OACE,kBAAC,EAAD,CACED,MAAOA,EACPX,QAASA,EACTY,aAAcA,K,uiBCRpB,IAAMhB,EAAYC,UAAOkB,OAAV,IACXxB,EAAK,SAAU,SAAU,WAIb,SAACQ,GAAD,OACZA,EAAMC,QAAUD,EAAME,MAAMC,KAAO,wBAEjCc,EAAInB,UAAOoB,EAAV,KAEI,SAAClB,GAAD,OAAYA,EAAMC,QAAU,QAAU,WAE3CkB,EAAgBrB,UAAOS,IAAV,IACff,EAAK,MAAO,SAAU,WAMb,SAACQ,GAAD,OAAYA,EAAMC,QAAU,QAAU,WAG7CmB,EAAOtB,UAAOuB,EAAV,KAmBKC,MAff,YAA+C,IAApBrB,EAAmB,EAAnBA,QACzB,OACE,kBAAC,EAAD,CAAWA,QAASA,GAClB,kBAACkB,EAAD,CAAelB,QAASA,GACtB,kBAACmB,EAAD,CAAMG,KAAK,8BACT,kBAAC,IAAD,CAAiBC,KAAMC,OAEzB,kBAACL,EAAD,CAAMG,KAAK,sCACT,kBAAC,IAAD,CAAiBC,KAAME,QAG3B,kBAACT,EAAD,CAAGhB,QAASA,GAAZ,mBClCS0B,MAHf,YAA+C,IAApB1B,EAAmB,EAAnBA,QACzB,OAAO,kBAAC,EAAD,CAAiBA,QAASA,K,6iFCQnC,IAAM2B,EAAcC,4BAAH,IACbC,KASoB,SAAC9B,GAAD,OAClBA,EAAMC,QAAU,kBAAoB,aAcpCJ,EAAYC,UAAOiC,KAAV,KAGTC,EAAOlC,UAAOmC,KAAV,IACNzC,EAAK,MAAO,OAAQ,WAElB0C,GAAiBpC,UAAOS,IAAV,IAKhBf,EAAK,MAAO,SAAU,SAQpB2C,GAAQrC,UAAOsC,MAAV,KASLC,GAAgBvC,UAAOwC,QAAV,KAcbC,GAAOzC,UAAO0C,QAAV,IAKNhD,EAAK,MAAO,SAAU,SAKpBY,GAAQN,UAAOoB,EAAV,KACU,SAAClB,GAAD,OAAYA,EAAMyC,KAAO,eAAiB,MACpD,SAACzC,GAAD,OAAYA,EAAMyC,KAAOzC,EAAME,MAAMQ,UAAY,WAEtDgC,GAAW5C,UAAOS,IAAV,KAGQ,SAACP,GAAD,OAClBA,EAAMyC,KAAO,QAAUzC,EAAME,MAAMyC,iBAGjC,SAAC3C,GAAD,OAAYA,EAAMyC,KAAOzC,EAAME,MAAM0C,WAAa,UAEpDpD,EAAK,MAAO,SAAU,WACf,SAACQ,GAAD,OAAYA,EAAMyC,KAAOzC,EAAME,MAAM0C,WAAa,WAEvDC,GAAkB/C,UAAOS,IAAV,KAMR,SAACP,GAAD,OAAWA,EAAME,MAAM4C,YAG9BC,GAAmBjD,UAAOS,IAAV,KAEO,SAACP,GAAD,OAAWA,EAAME,MAAMQ,YAChDlB,EAAK,MAAO,SAAU,kBAEpBwD,GAAoBlD,UAAOS,IAAV,KAIjB0C,GAAWnD,UAAOoB,EAAV,KAEF,SAAClB,GAAD,OACRA,EAAMkD,SAAN,oBAA8BlD,EAAME,MAAM0C,YAAe,MAiH9CO,OAzFf,YAaY,IAAD,EAZTlD,EAYS,EAZTA,QACAmD,EAWS,EAXTA,OACAC,EAUS,EAVTA,MACAC,EASS,EATTA,KACAJ,EAQS,EARTA,SACAK,EAOS,EAPTA,YACAC,EAMS,EANTA,aACAC,EAKS,EALTA,eACAC,EAIS,EAJTA,WACAC,EAGS,EAHTA,iBACA9C,EAES,EAFTA,aACA+C,EACS,EADTA,aAEA,OACE,oCACE,kBAAChC,EAAD,CAAa3B,QAASA,IACtB,kBAAC,EAAD,CACEW,MAAO,WACPX,QAASA,EACTY,aAAcA,IAEhB,kBAAC,EAAD,KACE,kBAACmB,EAAD,CAAM6B,SAAUF,GACd,kBAACzB,GAAD,KACE,kBAAC,IAAD,CACEV,KAAM4B,EAASU,IAAoBC,IACnCjD,QAAS4C,IAEX,kBAACvB,GAAD,CACE6B,MAAOV,EACPW,SAAUR,EACVS,YAAa,6BAIlBd,GACC,oCACE,kBAACf,GAAD,KACE,kBAACU,GAAD,KACE,kBAACC,GAAD,KACE,kBAACC,GAAD,CAAUC,SAAuB,IAAbA,EAAgBpC,QAAS8C,EAAa,IAA1D,OAGA,kBAACX,GAAD,CAAUC,SAAuB,IAAbA,EAAgBpC,QAAS8C,EAAa,IAA1D,UAGA,kBAACX,GAAD,CAAUC,SAAuB,IAAbA,EAAgBpC,QAAS8C,EAAa,IAA1D,eATN,OAcGP,QAdH,IAcGA,GAdH,UAcGA,EACGc,QAAO,SAACb,GACR,OAAiB,IAAbJ,EACKI,EACe,IAAbJ,GACY,IAAdI,EAAKb,KACU,IAAbS,GACY,IAAdI,EAAKb,UADP,YApBb,aAcG,EAUG2B,KAAI,SAACd,GAAD,OACJ,kBAACf,GAAD,CAAM8B,IAAKf,EAAKgB,KACd,kBAAC5B,GAAD,CACED,KAAMa,EAAKb,KACX8B,UAASjB,EAAKgB,IACdxD,QAASyC,GAET,kBAAC,IAAD,CAAiB/B,KAAMgD,OAEzB,kBAAC,GAAD,CAAO/B,KAAMa,EAAKb,MAAOa,EAAK1C,OAC9B,kBAACiC,GAAD,CACE4B,UAAW,mBACXF,UAASjB,EAAKgB,IACdxD,QAAS0C,GAET,kBAAC,IAAD,CAAiBhC,KAAMkD,cAQvC,kBAAC,EAAD,CAAQzE,QAASA,M,SCjIR0E,OAnGf,WAAyB,IAAD,EACIC,mBAAkB,IADtB,mBACfvB,EADe,KACRwB,EADQ,OAEED,mBAAiB,IAFnB,mBAEftB,EAFe,KAETwB,EAFS,OAGIF,oBAAkB,GAHtB,mBAGfxB,EAHe,KAGP2B,EAHO,OAIMH,oBAAkB,GAJxB,mBAIf3E,EAJe,KAIN+E,EAJM,OAKQJ,mBAAiB,GALzB,mBAKf1B,EALe,KAKL+B,EALK,KAMtBC,qBAAU,WACR,IAAMC,EAAWC,aAAaC,QAAQ,QACpCC,EAAOF,aAAaC,QAAQ,QAC1BF,GACFN,EAASU,KAAKC,MAAML,IAElBG,GACFN,EAAkB,SAATM,KAEV,IACH,IAAMG,EAAYC,uBAAY,SAACP,GAC7BC,aAAaO,QAAQ,OAAQJ,KAAKK,UAAUT,IAC5CN,EAASM,KACR,IACGU,EAAYH,uBAAY,SAACJ,GAC7BF,aAAaO,QAAQ,OAAQL,GAC7BN,EAASM,KACR,IACG7B,EAAiBiC,uBAAY,SAACI,GAAO,IAE7B9B,EACR8B,EADFC,OAAU/B,MAEZc,EAAQd,KACP,IACGL,EAAmB+B,uBACvB,SAACI,GACCA,EAAEE,iBACF,IAAMC,EAAW,sBAAO5C,GAAP,CAAc,CAAEiB,IAAK4B,eAAMtF,MAAO0C,EAAMb,MAAM,KAC/DgD,EAAUQ,GACVnB,EAAQ,MAEV,CAACW,EAAWnC,EAAMD,IAEdK,EAAagC,uBAAY,WAC7BX,GAAS3B,KACR,CAACA,IACEvC,EAAe6E,uBACnB,SAACI,GACCD,GAAW5F,KAEb,CAACA,EAAS4F,IAENtC,EAAcmC,uBAClB,SAACI,GAAO,IAIAxB,EADFwB,EADFK,cAAiBC,QAEA,GACnB,GAAI9B,EAAK,CACP,IAAM+B,EAAehD,EAAMe,KAAI,SAACd,GAI9B,OAHIA,EAAKgB,MAAQA,IACfhB,EAAKb,MAAQa,EAAKb,MAEba,KAETmC,EAAUY,MAGd,CAAChD,EAAOoC,IAEJjC,EAAekC,uBACnB,SAACI,GAAO,IAEaM,EACfN,EADFK,cAAiBC,QAEbE,EAAgBjD,EAAMc,QAAO,SAACb,GAAD,OAAUA,EAAKgB,MAAQ8B,EAAO,MACjEX,EAAUa,KAEZ,CAACb,EAAWpC,IAERO,EAAe8B,uBACnB,SAACa,GAAD,OAAS,WACPtB,EAAUsB,MAEZ,IAEF,OACE,kBAAC,GAAD,CACEtG,QAASA,EACToD,MAAOA,EACPC,KAAMA,EACNF,OAAQA,EACRF,SAAUA,EACVK,YAAaA,EACbC,aAAcA,EACdE,WAAYA,EACZC,iBAAkBA,EAClB9C,aAAcA,EACd4C,eAAgBA,EAChBG,aAAcA,KCnGpB4C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,gBAAD,CAAexG,MCPJ,CACb0C,WAAY,UACZlC,UAAW,UACXoC,SAAU,UACVH,cAAe,YACfxC,KAAM,oBDGF,kBAAC,GAAD,QAGJwG,SAASC,eAAe,W","file":"static/js/main.d0b86c6b.chunk.js","sourcesContent":["import { css } from \"styled-components\";\nexport const flex = (dir: string, align: string, justify: string) => {\n  return css`\n    display: flex;\n    flex-direction: ${dir};\n    align-items: ${align};\n    justify-content: ${justify};\n  `;\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { flex } from \"../../mixin\";\nconst Container = styled.header<{ isNight: boolean }>`\n  height: 10vh;\n  ${flex(\"row\", \"center\", \"space-between\")}\n  border-bottom: 1px solid #b9b9b9;\n  margin-bottom: 10px;\n  background-color: white;\n  background: ${(props) =>\n    props.isNight ? props.theme.dark : \"rgb(255, 255, 255)\"};\n`;\nconst Title = styled.h5<{ isNight: boolean }>`\n  padding-left: 10px;\n  font-weight: bold;\n  color: ${(props) => (props.isNight ? \"white\" : \"black\")};\n`;\nconst ButtonContainer = styled.div`\n  height: 60%;\n  width: 100px;\n  margin: auto 0;\n  margin-right: 10px;\n`;\nconst Button = styled.button<{ isNight: boolean }>`\n  all: unset;\n  width: 100%;\n  height: 100%;\n  border-radius: 20px;\n  border: 1px solid ${(props) => props.theme.greyColor};\n  background-image: ${(props) =>\n    props.isNight\n      ? \"linear-gradient(to right, #667195 0%, #00269c 100%)\"\n      : \"linear-gradient(to right, #e7feff 2%, #f4f5e2 100%)\"};\n  cursor: pointer;\n  ${flex(\"row\", \"center\", \"center\")}\n  color: ${(props) => (props.isNight ? \"white\" : \"#4c4c4c\")};\n  font-weight: 800;\n`;\ninterface IProps {\n  title?: string;\n  isNight: boolean;\n  handleToggle: (e: React.SyntheticEvent<HTMLButtonElement>) => void;\n}\nfunction HeaderPresenter({ title, isNight, handleToggle }: IProps) {\n  return (\n    <Container isNight={isNight}>\n      <Title isNight={isNight}>{title}</Title>\n      <ButtonContainer>\n        <Button isNight={isNight} onClick={handleToggle}>\n          {isNight ? \"Night On\" : \"Night Off\"}\n        </Button>\n      </ButtonContainer>\n    </Container>\n  );\n}\nexport default HeaderPresenter;\n","import React, { useState, useCallback } from \"react\";\nimport HeaderPresenter from \"./HeaderPresenter\";\ninterface IProps {\n  title: string;\n  isNight: boolean;\n  handleToggle: (e: React.SyntheticEvent<HTMLButtonElement>) => void;\n}\nfunction HeaderContainer({ title, isNight, handleToggle }: IProps) {\n  //const [isNight, setNight] = useState<boolean>(false);\n  return (\n    <HeaderPresenter\n      title={title}\n      isNight={isNight}\n      handleToggle={handleToggle}\n    />\n  );\n}\nexport default HeaderContainer;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { flex } from \"../../mixin\";\nimport { faGithub, faInstagram } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nconst Container = styled.footer<{ isNight: boolean }>`\n  ${flex(\"column\", \"center\", \"center\")}\n  min-height: 10vh;\n  height: 100%;\n  border-top: 1px solid #b9b9b9;\n  background: ${(props) =>\n    props.isNight ? props.theme.dark : \"rgb(255, 255, 255)\"};\n`;\nconst P = styled.p<{ isNight: boolean }>`\n  font-weight: bolder;\n  color: ${(props) => (props.isNight ? \"white\" : \"black\")};\n`;\nconst LinkContainer = styled.div<{ isNight: boolean }>`\n  ${flex(\"row\", \"center\", \"center\")}\n  margin-bottom: 5px;\n  svg {\n    font-size: 2rem;\n    margin: 5px;\n    cursor: pointer;\n    color: ${(props) => (props.isNight ? \"white\" : \"black\")};\n  }\n`;\nconst Link = styled.a``;\ninterface IProps {\n  isNight: boolean;\n}\nfunction FooterPresenter({ isNight }: IProps) {\n  return (\n    <Container isNight={isNight}>\n      <LinkContainer isNight={isNight}>\n        <Link href=\"https://github.com/leye195\">\n          <FontAwesomeIcon icon={faGithub} />\n        </Link>\n        <Link href=\"https://www.instagram.com/dan__yj/\">\n          <FontAwesomeIcon icon={faInstagram} />\n        </Link>\n      </LinkContainer>\n      <P isNight={isNight}>TS-ToDos@2020</P>\n    </Container>\n  );\n}\nexport default FooterPresenter;\n","import React from \"react\";\nimport FooterPresenter from \"./FooterPresenter\";\ninterface IProps {\n  isNight: boolean;\n}\nfunction FooterContainer({ isNight }: IProps) {\n  return <FooterPresenter isNight={isNight} />;\n}\nexport default FooterContainer;\n","import React from \"react\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport { flex } from \"../../mixin\";\nimport reset from \"styled-reset\";\n\nimport {\n  faChevronCircleDown,\n  faChevronCircleUp,\n  faCheck,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Header from \"../Header\";\nimport Footer from \"../Footer\";\nconst GlobalStyle = createGlobalStyle<{ isNight: boolean }>`\n  ${reset}\n  *{\n    box-sizing:border-box;\n    transition:color,background-color 0.5s ease-out;\n  }\n  body{\n    padding:0;\n    margin:0;\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    background-color: ${(props) =>\n      props.isNight ? \"rgb(54, 53, 55)\" : \"#e3e3e3\"};\n  }\n  a{\n    color:inherit;\n    cursor:pointer;\n    text-decoration:none;\n  }\n  li{\n    list-style:none\n  }\n  svg{\n    cursor:pointer;\n  }\n`;\nconst Container = styled.main`\n  min-height: 80vh;\n`;\nconst Form = styled.form`\n  ${flex(\"row\", \"none\", \"center\")}\n`;\nconst InputContainer = styled.div`\n  padding: 10px;\n  font-size: 1.4rem;\n  border-radius: 10px;\n  background-color: white;\n  ${flex(\"row\", \"center\", \"none\")}\n  width: 60vw;\n  box-shadow: 2px 2px 8px 1px #08080845;\n  svg {\n    color: #e3e3e3;\n    cursor: pointer;\n  }\n`;\nconst Input = styled.input`\n  all: unset;\n  padding: 10px;\n  font-size: 1.4rem;\n  width: 100%;\n  &::placeholder {\n    color: #cccccc;\n  }\n`;\nconst TodoContainer = styled.section`\n  width: 55vw;\n  margin: auto;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  background-color: white;\n  border: 1px solid #e3e3e3;\n  box-shadow: 2px 2px 0px 0px white;\n  &::after {\n    content: \"\";\n    height: 100%;\n    width: 100%;\n  }\n`;\nconst ToDo = styled.article`\n  position: relative;\n  height: 10vh;\n  padding: 10px;\n  border-bottom: 1px solid #e3e3e3;\n  ${flex(\"row\", \"center\", \"none\")}\n  &:hover .delete-container {\n    opacity: 1;\n  }\n`;\nconst Title = styled.p<{ done: boolean }>`\n  text-decoration: ${(props) => (props.done ? \"line-through\" : \"\")};\n  color: ${(props) => (props.done ? props.theme.greyColor : \"black\")};\n`;\nconst CheckBox = styled.div<{ done: boolean }>`\n  height: 40px;\n  width: 40px;\n  background-color: ${(props) =>\n    props.done ? \"white\" : props.theme.darkgreyColor};\n  border-radius: 50%;\n  border: 1px solid\n    ${(props) => (props.done ? props.theme.greenColor : \"white\")};\n  margin-right: 10px;\n  ${flex(\"row\", \"center\", \"center\")}\n  color: ${(props) => (props.done ? props.theme.greenColor : \"white\")};\n`;\nconst DeleteContainer = styled.div`\n  position: absolute;\n  right: 5%;\n  font-size: 1.2rem;\n  opacity: 0;\n  & svg {\n    color: ${(props) => props.theme.redColor};\n  }\n`;\nconst ControlContainer = styled.div`\n  padding: 10px;\n  border-bottom: 1px solid ${(props) => props.theme.greyColor};\n  ${flex(\"row\", \"center\", \"space-between\")}\n`;\nconst CategoryContainer = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst Category = styled.p<{ selected: boolean }>`\n  padding: 10px;\n  border: ${(props) =>\n    props.selected ? `1px solid ${props.theme.greenColor}` : \"\"};\n  cursor: pointer;\n`;\ninterface ITodo {\n  _id: string;\n  title: string;\n  done: boolean;\n}\ninterface IProps {\n  isNight: boolean;\n  isOpen: boolean;\n  todos: Array<ITodo>;\n  todo: string;\n  selected: number;\n  handleCheck: (e: React.SyntheticEvent<HTMLDivElement>) => void;\n  handleDelete: (e: React.SyntheticEvent<HTMLDivElement>) => void;\n  handleOnChange: (e: React.SyntheticEvent<HTMLInputElement>) => void;\n  handleOpen: (e: React.SyntheticEvent<HTMLOrSVGElement>) => void;\n  handleSubmitToDo: (e: React.SyntheticEvent<HTMLFormElement>) => void;\n  handleToggle: (e: React.SyntheticEvent<HTMLButtonElement>) => void;\n  handleSelect: (\n    idx: number\n  ) => (e: React.SyntheticEvent<HTMLParagraphElement>) => void;\n}\nfunction AppPresenter({\n  isNight,\n  isOpen,\n  todos,\n  todo,\n  selected,\n  handleCheck,\n  handleDelete,\n  handleOnChange,\n  handleOpen,\n  handleSubmitToDo,\n  handleToggle,\n  handleSelect,\n}: IProps) {\n  return (\n    <>\n      <GlobalStyle isNight={isNight} />\n      <Header\n        title={\"TS-ToDos\"}\n        isNight={isNight}\n        handleToggle={handleToggle}\n      />\n      <Container>\n        <Form onSubmit={handleSubmitToDo}>\n          <InputContainer>\n            <FontAwesomeIcon\n              icon={isOpen ? faChevronCircleUp : faChevronCircleDown}\n              onClick={handleOpen}\n            />\n            <Input\n              value={todo}\n              onChange={handleOnChange}\n              placeholder={\"What needs to be done?\"}\n            />\n          </InputContainer>\n        </Form>\n        {isOpen && (\n          <>\n            <TodoContainer>\n              <ControlContainer>\n                <CategoryContainer>\n                  <Category selected={selected === 0} onClick={handleSelect(0)}>\n                    All\n                  </Category>\n                  <Category selected={selected === 1} onClick={handleSelect(1)}>\n                    Active\n                  </Category>\n                  <Category selected={selected === 2} onClick={handleSelect(2)}>\n                    Completed\n                  </Category>\n                </CategoryContainer>\n              </ControlContainer>\n              {todos\n                ?.filter((todo) => {\n                  if (selected === 0) {\n                    return todo;\n                  } else if (selected === 1) {\n                    return todo.done === false;\n                  } else if (selected === 2) {\n                    return todo.done === true;\n                  }\n                })\n                ?.map((todo) => (\n                  <ToDo key={todo._id}>\n                    <CheckBox\n                      done={todo.done}\n                      data-id={todo._id}\n                      onClick={handleCheck}\n                    >\n                      <FontAwesomeIcon icon={faCheck} />\n                    </CheckBox>\n                    <Title done={todo.done}>{todo.title}</Title>\n                    <DeleteContainer\n                      className={\"delete-container\"}\n                      data-id={todo._id}\n                      onClick={handleDelete}\n                    >\n                      <FontAwesomeIcon icon={faTimes} />\n                    </DeleteContainer>\n                  </ToDo>\n                ))}\n            </TodoContainer>\n          </>\n        )}\n      </Container>\n      <Footer isNight={isNight} />\n    </>\n  );\n}\nexport default AppPresenter;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport AppPresenter from \"./AppPresenter\";\nimport { v4 } from \"uuid\";\n\ninterface ITodo {\n  _id: string;\n  title: string;\n  done: boolean;\n}\nfunction AppContainer() {\n  const [todos, setToDos] = useState<ITodo[]>([]);\n  const [todo, setToDo] = useState<string>(\"\");\n  const [isOpen, setOpen] = useState<boolean>(true);\n  const [isNight, setNight] = useState<boolean>(false);\n  const [selected, setSelect] = useState<number>(0);\n  useEffect(() => {\n    const todoList = localStorage.getItem(\"todo\"),\n      flag = localStorage.getItem(\"dark\");\n    if (todoList) {\n      setToDos(JSON.parse(todoList));\n    }\n    if (flag) {\n      setNight(flag === \"true\");\n    }\n  }, []);\n  const saveToDos = useCallback((todoList: Array<ITodo>) => {\n    localStorage.setItem(\"todo\", JSON.stringify(todoList));\n    setToDos(todoList);\n  }, []);\n  const saveTheme = useCallback((flag) => {\n    localStorage.setItem(\"dark\", flag);\n    setNight(flag);\n  }, []);\n  const handleOnChange = useCallback((e) => {\n    const {\n      target: { value },\n    } = e;\n    setToDo(value);\n  }, []);\n  const handleSubmitToDo = useCallback(\n    (e) => {\n      e.preventDefault();\n      const newToDoList = [...todos, { _id: v4(), title: todo, done: false }];\n      saveToDos(newToDoList);\n      setToDo(\"\");\n    },\n    [saveToDos, todo, todos]\n  );\n  const handleOpen = useCallback(() => {\n    setOpen(!isOpen);\n  }, [isOpen]);\n  const handleToggle = useCallback(\n    (e) => {\n      saveTheme(!isNight);\n    },\n    [isNight, saveTheme]\n  );\n  const handleCheck = useCallback(\n    (e) => {\n      const {\n        currentTarget: { dataset },\n      } = e;\n      const _id = dataset[\"id\"];\n      if (_id) {\n        const updatedTodos = todos.map((todo) => {\n          if (todo._id === _id) {\n            todo.done = !todo.done;\n          }\n          return todo;\n        });\n        saveToDos(updatedTodos);\n      }\n    },\n    [todos, saveToDos]\n  );\n  const handleDelete = useCallback(\n    (e) => {\n      const {\n        currentTarget: { dataset },\n      } = e;\n      const filteredToDos = todos.filter((todo) => todo._id !== dataset[\"id\"]);\n      saveToDos(filteredToDos);\n    },\n    [saveToDos, todos]\n  );\n  const handleSelect = useCallback(\n    (idx) => () => {\n      setSelect(idx);\n    },\n    []\n  );\n  return (\n    <AppPresenter\n      isNight={isNight}\n      todos={todos}\n      todo={todo}\n      isOpen={isOpen}\n      selected={selected}\n      handleCheck={handleCheck}\n      handleDelete={handleDelete}\n      handleOpen={handleOpen}\n      handleSubmitToDo={handleSubmitToDo}\n      handleToggle={handleToggle}\n      handleOnChange={handleOnChange}\n      handleSelect={handleSelect}\n    />\n  );\n}\nexport default AppContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { ThemeProvider } from \"styled-components\";\nimport theme from \"./theme\";\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","export default {\n  greenColor: \"#1abc9c\",\n  greyColor: \"#e3e3e3\",\n  redColor: \"#ff7675\",\n  darkgreyColor: \"#cecece61\",\n  dark: \"rgb(54, 53, 55)\",\n};\n"],"sourceRoot":""}